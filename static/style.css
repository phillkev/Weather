/* Setting up the base body and used font types.  Throughout this css file you will see I used a mix of
px, em and vw for element sizes.  I found it was best to use vw for fonts its screen based scaling was excellent.
For a few items I stuck with px, specifically border widths really did better with px.  In most cases I found
px to be best for Borders.  the em scaling was intersting and I want to do more research on how it is different 
from vw but functionally it behaved like a cross between px and vw so I did use it in a few places where I needed
less extreme scaling */

body {
    background-color: #6a7fd3;
    font-size: 1.25vw;

}

h1 {
    margin-left: .85vw;
    margin-right: .85vw;
    font-size: 3.5vw;
    font-family: 'Ubuntu', sans-serif;
}

h3 {
    text-align: center;
    font-size: 3vw;
}

h4 {
    text-align: center;
    font-size: 2.5vw;
    padding-bottom: 2.5vw;
}

p {
    margin-left: 2vw;
    margin-right: 2vw;
    font-size: 1.5vw;
    font-family: 'Arial Narrow Bold', Arial, sans-serif;
}

/* image properties */

img {
    width: 100%;
    height: auto;
    padding-bottom: 2vw;
    margin: 0;
  }

/* the large image on the index page needed special attention so it would look right on
ipad (sm), iphone(xs) and the larger monitor screens there are still a few screen sizes where
the left floated text only moves my first two words.  I realized a more permanent fix to this solution
would be to make the first word in the text body be the longest length word.  That way all other words
would fall underr it instead of spliting the paragraph with the first two words in one part of the 
screen and the rest of the words below.  In normal type print I would use kerning....and that is
probably available as some add-on but I needed to finish the asignment. I gave this image its own 
name to help address the sizing issue. The widths were set to make the ugly float issue happen in 
a screen size that is larger than my ipad and smaller than a standard laptop full screen*/

img#main1 {
    max-width: 50vw;
    min-width: 40vw;
    margin-left: 5vw;
}

/* The images that are displayed in a group of 4 needed special handling.  I created two different ids
so they could be worked independantly.*/

.container img#comp {
    text-align: center;
    float: left;
    padding-bottom: 2vw;
}

.container img#index {
    text-align: center;
    float: left;
    padding-bottom: 2vw;
}



/* The navigation bar needed lots of tweaks to get it to where I wanted it with the four screen sizes I used for testing and
optimization */

.navbar-default {
    margin-bottom: 0px;
    border-color: #676a75;
    border-width: .3vw;
    border-radius: 1vw;
    background: rgb(187, 196, 197);
}

.navbar-default .navbar-nav>.active>a, .navbar-default .navbar-nav>.active>a:focus, .navbar-default .navbar-nav>.active>a:hover {
    margin-left: .85vw;
    margin-right: .85vw;
    font-size: 3.1vw;
    font-family: 'Ubuntu', sans-serif;
    background-color: #a8b5eb;
    border-radius: .5vw;
}

.navbar-default .navbar-nav>li>a {
    font-size: 1.8vw;
    padding-top: 1.69vw;
    padding-bottom: 1.69vw;
}

.navbar-header img#brand {
    margin-left: 1vw;
    max-width:3em;
    padding: .1vw;
    height: auto;
}

/* some padding controls for some of the more commonly used classes really this was to override bootstrap defaults*/

.container-fluid {
    padding-right: 0px;
    padding-left: 0px;
}

.container {
    padding-right: 0px;
    padding-left: 0px;
    background-color: #a8b5eb;
}

.row {
    padding-right: 1vw;
    padding-left: 1vw;
    
}

/* Setting up my footer - set the background to transparent so the footer is clearly seperate from the body */

.footer {
    position: relative;
    background: rgb(187, 196, 197);
}

.footer .container {
    background: transparent;
}

/* These controls are specific for the table and its elements.  Unlike most borders I found 
em borders to work better for the table */ 

table {
    background-color: #d4d9ee;
    margin: 0 auto !important;
}

tr#odd {
    background-color: #ffffffe1;
}

.table>caption+thead>tr:first-child>td, .table>caption+thead>tr:first-child>th, 
.navbar-brand>colgroup+thead>tr:first-child>td, .table>colgroup+thead>tr:first-child>th, 
.table>thead:first-child>tr:first-child>td, .table>thead:first-child>tr:first-child>th {
    font-size: 1.8vw;
    border-bottom: .15em solid;
    border-top: .07em solid;
}

.table-bordered>tbody>tr>td, .table-bordered>tbody>tr>th, 
.table-bordered>tfoot>tr>td, .table-bordered>tfoot>tr>th, 
.table-bordered>thead>tr>td, .table-bordered>thead>tr>th {
    border: .1em solid;
}

.table-condensed>tbody>tr>td, .table-condensed>tbody>tr>th, 
.table-condensed>tfoot>tr>td, .table-condensed>tfoot>tr>th, 
.table-condensed>thead>tr>td, .table-condensed>thead>tr>th {
    font-size: 1.6vw;
    padding: .2vw;
}

/* My media queries are likely over the top but I was testing on 4 platforms and I wanted to ensure 
my fonts looked good on all of these devices */

@media (max-width: 993px) and (min-width: 800px) {
    .table>caption+thead>tr:first-child>td, .table>caption+thead>tr:first-child>th, 
    .navbar-brand>colgroup+thead>tr:first-child>td, .table>colgroup+thead>tr:first-child>th, 
    .table>thead:first-child>tr:first-child>td, .table>thead:first-child>tr:first-child>th {
        font-size: 1.4vw;
    }

        
    .table-condensed>tbody>tr>td, .table-condensed>tbody>tr>th, 
    .table-condensed>tfoot>tr>td, .table-condensed>tfoot>tr>th, 
    .table-condensed>thead>tr>td, .table-condensed>thead>tr>th {
        font-size: 1.3vw;
    }


}


@media (max-width: 766px) {
    .navbar-default .navbar-nav>li>a {
        font-size: 3vw;
    }
    
    .navbar-collapse#navbar-collapse-1>a .navbar-nav>a {
        font-size: 3.5vw;
    }

    p {
        margin-left: 2vw;
        margin-right: 2vw;
        font-size: 2.5vw;
        font-family: 'Arial Narrow Bold', Arial, sans-serif;
    }

}

@media (max-width: 600px) {
    .table>caption+thead>tr:first-child>td, .table>caption+thead>tr:first-child>th, 
    .navbar-brand>colgroup+thead>tr:first-child>td, .table>colgroup+thead>tr:first-child>th, 
    .table>thead:first-child>tr:first-child>td, .table>thead:first-child>tr:first-child>th {
        font-size: 1.8vw;
    }

        
    .table-condensed>tbody>tr>td, .table-condensed>tbody>tr>th, 
    .table-condensed>tfoot>tr>td, .table-condensed>tfoot>tr>th, 
    .table-condensed>thead>tr>td, .table-condensed>thead>tr>th {
        font-size: 1.7vw;
    }

    .col-xs-6#comp {
        padding-left: 2vw;
        padding-right: 2vw;
        padding-bottom: 2vw;
    }
}

/* These last few media queries were to improve the display for larger screens 
I realized that it would actually be better to use a single container media query
and set the width using something like width: 80vw but this triggered the need
to reformat all my tweaks in the other media queries and I just needed to turn the 
assignment in.  But the next phase of development would be to remove these media 
queries and leverage vw instead of px to improve the consistency of the webpage 
and potentially reduce/eliminate even more of my css media based styles */ 

@media (min-width: 1400px) {
.container {
      width: 1370px;
  }

}

@media (min-width: 1600px) {
.container {
      width: 1570px;
  }
}

@media (min-width: 1800px) {
    .container {
        width: 1770px;
    }
}

@media (min-width: 2000px) {
    .container {
        width: 1970px;
    }
}